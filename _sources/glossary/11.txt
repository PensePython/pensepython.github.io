mapeamento (*mapping*)
  A relationship in which each element of one set corresponds to an element of another set.

dicionário (*dictionary*)
  A mapping from keys to their corresponding values.

par chave-valor (*key-value pair*)
  The representation of the mapping from a key to a value.

*item* (item)
  In a dictionary, another name for a key-value pair.

chave (*key*)
  An object that appears in a dictionary as the first part of a key-value pair.

valor (*value*)
  An object that appears in a dictionary as the second part of a key-value pair. This is more specific than our previous use of the word “value”.

implementação (*implementation*)
  A way of performing a computation.

tabela de hash (*hashtable*)
  The algorithm used to implement Python dictionaries.

função de hash (*hash function*)
  A function used by a hashtable to compute the location for a key.

*hashable* ()
  A type that has a hash function. Immutable types like integers, floats and strings are hashable; mutable types like lists and dictionaries are not.

busca (*lookup*)
  A dictionary operation that takes a key and finds the corresponding value.

busca invertida (*reverse lookup*)
  A dictionary operation that takes a value and finds one or more keys that map to it.

instrução ``raise`` (*``raise`` statement*)
  A statement that (deliberately) raises an exception.

*singleton*
  A list (or other sequence) with a single element.

diagrama de chamadas (*call graph*)
  A diagram that shows every frame created during the execution of a program, with an arrow from each caller to each callee.

*memo* (“lembrete”)
  A computed value stored to avoid unnecessary future computation.

variável global (*global variable*)
  A variable defined outside a function. Global variables can be accessed from any function.

declaração ``global`` (*``global`` statement*)
  A statement that declares a variable name global.

*flag* (“indicador”)
  A boolean variable used to indicate whether a condition is true.

declaração (*declaration*)
  A statement like global that tells the interpreter something about a variable.

